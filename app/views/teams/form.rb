class Teams::Form < ApplicationForm
  def view_template(&)
    row field(:name).input(class: "mort-form-text").focus
    row field(:team_color).select(Team.colors, prompt: I18n.t(".select_team_color"), class: "mort-form-text")
    view_only field(:punches_settled_at).date(class: "mort-form-text")
    row field(:locale).select(Team.locales, prompt: I18n.t(".select_team_locale"), class: "mort-form-text")
    row field(:time_zone).select(ActiveSupport::TimeZone.all.collect { |tz| [ "(GMT#{ActiveSupport::TimeZone.seconds_to_utc_offset(tz.utc_offset)}) #{tz.name}", tz.tzinfo.name ] }, class: "mort-form-text")
    row field(:payroll_team_ident).input(class: "mort-form-text")
    # row field(:state).input(class: "mort-form-text")
    row field(:description).textarea(class: "mort-form-text")
    row field(:email).input(class: "mort-form-text")
    row field(:cell_phone).input(class: "mort-form-text")
    row field(:pbx_extension).input(class: "mort-form-text")
    row field(:contract_minutes).input(class: "mort-form-text")
    row field(:contract_days_per_payroll).input(class: "mort-form-text")
    row field(:contract_days_per_week).input(class: "mort-form-text")
    row field(:hour_pay).input(class: "mort-form-text")
    row field(:ot1_add_hour_pay).input(class: "mort-form-text")
    row field(:ot2_add_hour_pay).input(class: "mort-form-text")
    row field(:tmp_overtime_allowed).input(class: "mort-form-text")
    row field(:eu_state).input(class: "mort-form-text")
    row field(:blocked).input(class: "mort-form-text")
    row field(:allowed_ot_minutes).input(class: "mort-form-text")
  end
end
