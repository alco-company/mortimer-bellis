# Grab the secrets from /.env
# ex SOME_ENV=$(cat .env | grep KAMAL_REGISTRY_PASSWORD | cut -d'=' -f2)
# 
# Rename this file to .kamal/secrets (or .kamal/secrets.<your-env> matching your /.env.<your-env>)
#
# or from https://ztin.gs (account required) doing the following:
# SECRETS=$(kamal secrets fetch --adapter ztings --api 9482!72%kasdf-hhF )
# ex SOME_ENV=$(kamal secrets extract SOME_ENV $SECRETS)

KAMAL_REGISTRY_PASSWORD=$(cat .env | grep KAMAL_REGISTRY_PASSWORD | cut -d'=' -f2)
SECRET_KEY_BASE=$(cat .env | grep SECRET_KEY_BASE | cut -d'=' -f2)
RAILS_MASTER_KEY=$(cat .env | grep RAILS_MASTER_KEY | cut -d'=' -f2)
MORTIMER_VERSION=$(cat .env | grep MORTIMER_VERSION | cut -d'=' -f2)
SMTP_USER_NAME=$(cat .env | grep SMTP_USER_NAME | cut -d'=' -f2)
SMTP_PASSWORD=$(cat .env | grep SMTP_PASSWORD | cut -d'=' -f2)
SMTP_DOMAIN=$(cat .env | grep SMTP_DOMAIN | cut -d'=' -f2)
SMTP_HOST=$(cat .env | grep SMTP_HOST | cut -d'=' -f2)
SMTP_PORT=$(cat .env | grep SMTP_PORT | cut -d'=' -f2)
SMTP_AUTHENTICATION=$(cat .env | grep SMTP_AUTHENTICATION | cut -d'=' -f2)
SMTP_ENABLE_STARTTLS_AUTO=$(cat .env | grep SMTP_ENABLE_STARTTLS_AUTO | cut -d'=' -f2))
SSL_DOMAIN=$(cat .env | grep SSL_DOMAIN | cut -d'=' -f2)
WAVIX_APP_ID=$(cat .env | grep WAVIX_APP_ID | cut -d'=' -f2)
PDF_HOST=$(cat .env | grep PDF_HOST | cut -d'=' -f2)
WEB_HOST=$(cat .env | grep WEB_HOST | cut -d'=' -f2)
DINERO_APP_ID=$(cat .env | grep DINERO_APP_ID | cut -d'=' -f2)
DINERO_APP_SECRET=$(cat .env | grep DINERO_APP_SECRET | cut -d'=' -f2)
DINERO_APP_CALLBACK=$(cat .env | grep DINERO_APP_CALLBACK | cut -d'=' -f2)
TWITTER_API_KEY=$(cat .env | grep TWITTER_API_KEY | cut -d'=' -f2)
TWITTER_API_SECRET=$(cat .env | grep TWITTER_API_SECRET | cut -d'=' -f2)
TWITTER_BEARER_TOKEN=$(cat .env | grep TWITTER_BEARER_TOKEN | cut -d'=' -f2)
TWITTER_ACCESS_TOKEN=$(cat .env | grep TWITTER_ACCESS_TOKEN | cut -d'=' -f2)
TWITTER_ACCESS_TOKEN_SECRET=$(cat .env | grep TWITTER_ACCESS_TOKEN_SECRET | cut -d'=' -f2))
ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY=$(cat .env | grep ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY | cut -d'=' -f2))
ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY=$(cat .env | grep ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY | cut -d'=' -f2))
ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT=$(cat .env | grep ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT | cut -d'=' -f2))
OTP_KEY=$(cat .env | grep OTP_KEY | cut -d'=' -f2)
MS_AD_ID=$(cat .env | grep MS_AD_ID | cut -d'=' -f2)
MS_AD_SECRET=$(cat .env | grep MS_AD_SECRET | cut -d'=' -f2)
VAPID_PRIVATE_KEY=$(cat .env | grep VAPID_PRIVATE_KEY | cut -d'=' -f2)
VAPID_PUBLIC_KEY=$(cat .env | grep VAPID_PUBLIC_KEY | cut -d'=' -f2)
SOLID_QUEUE_IN_PUMA=$(cat .env | grep SOLID_QUEUE_IN_PUMA | cut -d'=' -f2)
STRIPE_SECRET_KEY=$(cat .env | grep STRIPE_SECRET_KEY | cut -d'=' -f2)
ANTHROPIC_API_KEY=$(cat .env | grep ANTHROPIC_API_KEY | cut -d'=' -f2)
MAILERSEND_API_TOKEN=$(cat .env | grep MAILERSEND_API_TOKEN | cut -d'=' -f2)
MAILERSEND_API_WEBHOOK_SECRET=$(cat .env | grep MAILERSEND_API_WEBHOOK_SECRET | cut -d'=' -f2))
CLOUDFLARE_TURNSTILE_SITE=$(cat .env | grep CLOUDFLARE_TURNSTILE_SITE | cut -d'=' -f2))
CLOUDFLARE_TURNSTILE_SECRET=$(cat .env | grep CLOUDFLARE_TURNSTILE_SECRET | cut -d'=' -f2))